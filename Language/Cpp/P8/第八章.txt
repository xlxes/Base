1.函数很短、且非递归的时候适合采用内联函数

2.
(a) void song(const char *name,int time = 1)
(b) 不需要 默认值只在原型中体现
(c）void song(const char *name = "O.My Papa",int time = 1)

3.
#include "iostream"
#include "string"
void iquote (const int a)
{
  cout <<"\""<<a<<"\"";
}
void iquote (const double a)
{
  cout <<"\""<<a<<"\"";
}
void iquote (const string a)
{
  cout <<"\""<<a<<"\"";
}

4.
(a)
void show_box(const box &n)
{
  cout <<n.maker<<endl;
  cout <<n.width<<endl;
  cout <<n.height<<endl;
  cout <<n.length<<endl;
  cout <<n.volume<<endl;
}
(b)
void set_volume(box &m)
{
  m.volume =m.length * m.height *m.width;
}

5.
声明中加入&符号，且show的声明中加入const限定符 fill中不需要使用指针，直接使用&pa
main函数中的fill改为fill(expenses)
且fill的原型中将使用pa而不是*pa

6.
(a) 
//默认值
double mass(double density,double volume = 1);
//重载
double mass(double d;double v);
double mass(double d);
(b)不可使用默认值 因为默认值是从右到左 可以重载
void repeat(int n ; const char* str);
void repeat(const char* str);
(c)可以重载
int average( int a,int b);
double average( double a,double b);
(d)不可实现 因为两个函数的特征标相同

7.
template<typename T>
T max(T a,T b)
{
  return a>b ? a : b ;
}

8.
template <> box max<box>(box b1,box b2)
{
  return b1.volume > b2.volume ? b1:b2;
}

9.
v1 float 
v2 float &
v3 float &
v4 double 
v5 double