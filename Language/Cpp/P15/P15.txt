1.
a. 友元类的声明如下
friend class clasp

b. 需要前向声明
snip(muff &);
class muff;

c. cuff应放到前面，且muff需要前向声明
class muff;
class cuff{
public:
	void snip(muff&) {...}
	...
};

class muff{
     friend void cuff::snip(muff &);
     ...
};

2.
不能，为使类A拥有一个本身为类的B的成员函数的友元，B的声明必须位于A的声明之前，一个前向声明时是不够的，因为这种声明可以告诉A，B是一个类，但是不能指出类成员的名称，而当B拥有A的成员函数为友元，也需要前向声明，这两个要求是互斥的。

3.
由于嵌套类声明位于基类的私有部分，访问该类的唯一方法是通过其接口，这意味着对于嵌套类只能调用构造函数来创建一个。而其他成员在默认情况下是私有的。

4.
例如f1()调用函数f2()
return 会回到f1()调用f2()的下一语句；
throw 会延当前调用序列回溯，直到找到直接或间接包含对f2()的调用的try语句，然后继续执行try语句后的catch语句块，而不是调用函数之后的语句。

5.
按照子孙到祖先的顺序来排列catch语句块

6.
对于事例1，如果pg指向为Superb对象或者Superb派生而来的任何类对象，则判断条件为true
对于事例2，只有pg指向的对象为Superb对象，其判断条件为true

7.
static_cast 允许向上转换和向下转换，同时支持枚举与数值与整型之间的转换
Dynamic_cast 只允许向上转换
